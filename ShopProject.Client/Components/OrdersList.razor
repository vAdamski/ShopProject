@using ShopProject.Shared.ViewModels
@using ShopProject.Client.ApiBrokers
@using ShopProject.Shared.Enums
@inherits ComponentBase
@inject IOrdersBroker OrdersBroker
@inject IPaymentBroker PaymentBroker
@inject NavigationManager NavigationManager

<div class="conatiner">
    <h3>Lista zamówień</h3>
    <div class="row">
        <div class="col-12">
            <table class="table table-striped table-borderless">
                <thead>
                <tr>
                    <th>Zamówienie</th>
                    <th>Status</th>
                    <th>Przedmiot</th>
                    <th>Wartość</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @if (_ordersListVm != null)
                {
                    foreach (var order in _ordersListVm.OrderDtos)
                    {
                        <tr>
                            <td>@order.OrderId</td>
                            <td>@order.StatusMessage</td>
                            <td></td>
                            <td class="fw-bold">@order.TotalPrice</td>
                            <td>
                                @if (order.State == OrderState.WaitingForPayment)
                                {
                                    <button class="btn btn btn-warning" @onclick="() => PayOrder(order.OrderId)">
                                        Opłać
                                    </button>
                                }
                            </td>
                        </tr>
                        foreach (var item in order.OrderItems)
                        {
                            <tr>
                                <td></td>
                                <td></td>
                                <td>@item.Name</td>
                                <td>@item.Price</td>
                                <td></td>
                            </tr>
                        }
                    }
                }
                else
                {
                    <p class="text-center">Ładowanie...</p>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private OrdersListVm _ordersListVm { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _ordersListVm = await OrdersBroker.GetOrdersAsync();
    }
    
    private async Task PayOrder(Guid orderId)
    {
        var response = await PaymentBroker.PostPaymentAsync(orderId);
        
        if (!string.IsNullOrEmpty(response))
        {
            NavigationManager.NavigateTo(response);
        }
    }
}